"""
Nutrition & Calories - Dinh d∆∞·ª°ng & Calories
============================================

Database th·ª±c ph·∫©m Vi·ªát Nam, t√≠nh calories, meal planning
"""

from typing import Dict, List, Optional

# Database th·ª±c ph·∫©m Vi·ªát Nam v·ªõi calories
VIETNAMESE_FOODS = {
    "breakfast": {
        "name": "M√≥n S√°ng",
        "foods": {
            "Ph·ªü b√≤": {"calories": 400, "protein": 20, "carbs": 60, "fat": 8},
            "Ph·ªü g√†": {"calories": 350, "protein": 18, "carbs": 55, "fat": 6},
            "B√°nh m√¨ th·ªãt": {"calories": 350, "protein": 15, "carbs": 45, "fat": 12},
            "B√°nh m√¨ pate": {"calories": 280, "protein": 10, "carbs": 40, "fat": 10},
            "B√∫n b√≤ Hu·∫ø": {"calories": 500, "protein": 22, "carbs": 65, "fat": 14},
            "B√∫n ch·∫£": {"calories": 450, "protein": 20, "carbs": 60, "fat": 12},
            "X√¥i th·ªãt": {"calories": 380, "protein": 12, "carbs": 65, "fat": 8},
            "X√¥i x√©o": {"calories": 320, "protein": 8, "carbs": 55, "fat": 8},
            "B√°nh cu·ªën": {"calories": 200, "protein": 8, "carbs": 35, "fat": 4},
            "Ch√°o g√†": {"calories": 180, "protein": 10, "carbs": 28, "fat": 3},
            "M√¨ tr·ªôn": {"calories": 420, "protein": 15, "carbs": 60, "fat": 12},
            "H·ªß ti·∫øu": {"calories": 380, "protein": 15, "carbs": 55, "fat": 10},
        }
    },
    
    "lunch_dinner": {
        "name": "M√≥n Ch√≠nh (Tr∆∞a/T·ªëi)",
        "foods": {
            "C∆°m t·∫•m": {"calories": 600, "protein": 25, "carbs": 85, "fat": 15},
            "C∆°m g√†": {"calories": 550, "protein": 30, "carbs": 75, "fat": 12},
            "C∆°m s∆∞·ªùn": {"calories": 650, "protein": 28, "carbs": 80, "fat": 20},
            "C∆°m rang": {"calories": 520, "protein": 18, "carbs": 70, "fat": 16},
            "B√∫n ri√™u": {"calories": 420, "protein": 18, "carbs": 60, "fat": 10},
            "B√∫n th·ªãt n∆∞·ªõng": {"calories": 480, "protein": 22, "carbs": 65, "fat": 12},
            "M√¨ Qu·∫£ng": {"calories": 450, "protein": 20, "carbs": 60, "fat": 11},
            "Cao l·∫ßu": {"calories": 480, "protein": 18, "carbs": 65, "fat": 13},
            "B√°nh x√®o": {"calories": 380, "protein": 12, "carbs": 50, "fat": 14},
            "Nem r√°n (10 c√°i)": {"calories": 500, "protein": 15, "carbs": 40, "fat": 30},
            "L·∫©u (1 ng∆∞·ªùi)": {"calories": 450, "protein": 25, "carbs": 35, "fat": 18},
        }
    },
    
    "side_dishes": {
        "name": "M√≥n Ph·ª•",
        "foods": {
            "C∆°m tr·∫Øng (1 b√°t)": {"calories": 200, "protein": 4, "carbs": 45, "fat": 0.5},
            "Canh chua": {"calories": 120, "protein": 8, "carbs": 15, "fat": 3},
            "Rau lu·ªôc": {"calories": 50, "protein": 3, "carbs": 8, "fat": 1},
            "ƒê·∫≠u h≈© chi√™n": {"calories": 180, "protein": 12, "carbs": 8, "fat": 12},
            "Th·ªãt kho t√†u (100g)": {"calories": 250, "protein": 18, "carbs": 10, "fat": 16},
            "C√° kho (100g)": {"calories": 200, "protein": 20, "carbs": 8, "fat": 10},
            "Tr·ª©ng lu·ªôc (1 qu·∫£)": {"calories": 70, "protein": 6, "carbs": 1, "fat": 5},
            "Tr·ª©ng chi√™n (1 qu·∫£)": {"calories": 110, "protein": 6, "carbs": 1, "fat": 9},
        }
    },
    
    "snacks": {
        "name": "M√≥n V·∫∑t",
        "foods": {
            "G·ªèi cu·ªën (1 cu·ªën)": {"calories": 70, "protein": 4, "carbs": 10, "fat": 2},
            "Ch·∫£ gi√≤ (1 c√°i)": {"calories": 80, "protein": 3, "carbs": 8, "fat": 4},
            "B√°nh bao (1 c√°i)": {"calories": 200, "protein": 6, "carbs": 30, "fat": 6},
            "B√°nh p√≠a (1 c√°i)": {"calories": 180, "protein": 4, "carbs": 28, "fat": 6},
            "B√°nh flan": {"calories": 150, "protein": 4, "carbs": 22, "fat": 5},
            "S·ªØa chua": {"calories": 100, "protein": 5, "carbs": 15, "fat": 2},
            "Tr√°i c√¢y (1 ph·∫ßn)": {"calories": 80, "protein": 1, "carbs": 20, "fat": 0},
        }
    },
    
    "drinks": {
        "name": "ƒê·ªì U·ªëng",
        "foods": {
            "C√† ph√™ ƒëen": {"calories": 5, "protein": 0, "carbs": 1, "fat": 0},
            "C√† ph√™ s·ªØa": {"calories": 150, "protein": 3, "carbs": 18, "fat": 7},
            "Tr√† s·ªØa tr√¢n ch√¢u": {"calories": 350, "protein": 5, "carbs": 55, "fat": 12},
            "Sinh t·ªë": {"calories": 180, "protein": 3, "carbs": 35, "fat": 4},
            "N∆∞·ªõc m√≠a": {"calories": 120, "protein": 1, "carbs": 30, "fat": 0},
            "N∆∞·ªõc d·ª´a": {"calories": 50, "protein": 1, "carbs": 12, "fat": 0},
            "N∆∞·ªõc ng·ªçt (330ml)": {"calories": 140, "protein": 0, "carbs": 35, "fat": 0},
            "Bia (330ml)": {"calories": 150, "protein": 1, "carbs": 13, "fat": 0},
        }
    }
}

# Ph√¢n lo·∫°i th·ª±c ph·∫©m theo m·ª•c ƒë√≠ch
FOOD_CATEGORIES = {
    "high_protein": {
        "name": "ü•© Gi√†u Protein (T·ªët cho gi·∫£m c√¢n)",
        "foods": [
            "Th·ªãt g√† lu·ªôc/n∆∞·ªõng",
            "C√° h·∫•p/n∆∞·ªõng",
            "ƒê·∫≠u h≈©",
            "Tr·ª©ng",
            "T√¥m",
            "M·ª±c",
            "S·ªØa kh√¥ng ƒë∆∞·ªùng"
        ],
        "tip": "Protein gi√∫p no l√¢u, duy tr√¨ c∆° b·∫Øp khi gi·∫£m c√¢n"
    },
    
    "low_calorie": {
        "name": "ü•ó √çt Calories (N√™n ƒÉn nhi·ªÅu)",
        "foods": [
            "Rau xanh c√°c lo·∫°i",
            "Canh chua",
            "G·ªèi cu·ªën",
            "Ch√°o",
            "S√∫p",
            "Tr√°i c√¢y (tr·ª´ s·∫ßu ri√™ng, m√≠t)"
        ],
        "tip": "ƒÇn nhi·ªÅu rau ‚Üí No b·ª•ng m√† √≠t calories"
    },
    
    "healthy_carbs": {
        "name": "üçö Tinh b·ªôt L√†nh m·∫°nh",
        "foods": [
            "C∆°m g·∫°o l·ª©t",
            "Khoai lang",
            "Y·∫øn m·∫°ch",
            "B√≠ ƒë·ªè",
            "Ng√¥"
        ],
        "tip": "Thay c∆°m tr·∫Øng b·∫±ng g·∫°o l·ª©t gi·∫£m calories 10-15%"
    },
    
    "avoid_high_calorie": {
        "name": "üö´ Tr√°nh (Calories Cao)",
        "foods": [
            "ƒê·ªì chi√™n r√°n (nem, ch·∫£ gi√≤, b√°nh r√°n)",
            "Tr√† s·ªØa",
            "N∆∞·ªõc ng·ªçt",
            "B√°nh ng·ªçt",
            "Th·ª©c ƒÉn nhanh",
            "M·ª°, da g√†",
            "N·ªôi t·∫°ng"
        ],
        "tip": "1 ly tr√† s·ªØa = 2 b√°t c∆°m v·ªÅ calories!"
    },
    
    "portion_control": {
        "name": "‚öñÔ∏è Ki·ªÉm so√°t kh·∫©u ph·∫ßn",
        "foods": [
            "D√πng ƒëƒ©a/b√°t nh·ªè h∆°n",
            "ƒÇn 50% rau, 25% protein, 25% tinh b·ªôt",
            "Nhai ch·∫≠m 20-30 l·∫ßn/mi·∫øng",
            "U·ªëng n∆∞·ªõc tr∆∞·ªõc b·ªØa ƒÉn",
            "D·ª´ng khi no 80%"
        ],
        "tip": "Kh·∫©u ph·∫ßn nh·ªè h∆°n 20% ‚Üí Gi·∫£m c√¢n m√† kh√¥ng ƒë√≥i"
    }
}

def calculate_daily_calories(
    tdee: float,
    goal: str = "maintain"
) -> Dict:
    """
    T√≠nh calories c·∫ßn thi·∫øt m·ªói ng√†y
    
    Args:
        tdee: Total Daily Energy Expenditure
        goal: "lose_slow", "lose_moderate", "lose_fast", "maintain", "gain"
    
    Returns:
        Dict v·ªõi calories v√† breakdown
    """
    goals_deficit = {
        "lose_slow": -300,      # -0.3kg/tu·∫ßn (cho ng∆∞·ªùi gi√†)
        "lose_moderate": -500,  # -0.5kg/tu·∫ßn
        "lose_fast": -750,      # -0.75kg/tu·∫ßn
        "maintain": 0,
        "gain": +300
    }
    
    deficit = goals_deficit.get(goal, 0)
    target_calories = tdee + deficit
    
    # Kh√¥ng < 1200 cal cho n·ªØ, 1500 cho nam
    min_calories = 1200
    if target_calories < min_calories:
        target_calories = min_calories
    
    # Chia calories theo b·ªØa (VN th∆∞·ªùng ƒÉn 3 b·ªØa ch√≠nh)
    breakfast = target_calories * 0.30  # 30% s√°ng
    lunch = target_calories * 0.40      # 40% tr∆∞a
    dinner = target_calories * 0.25     # 25% t·ªëi
    snacks = target_calories * 0.05     # 5% v·∫∑t
    
    return {
        "daily_calories": round(target_calories, 0),
        "breakfast": round(breakfast, 0),
        "lunch": round(lunch, 0),
        "dinner": round(dinner, 0),
        "snacks": round(snacks, 0),
        "macros": {
            "protein": round(target_calories * 0.30 / 4, 0),  # 30% protein, 4cal/g
            "carbs": round(target_calories * 0.40 / 4, 0),    # 40% carbs, 4cal/g
            "fat": round(target_calories * 0.30 / 9, 0),      # 30% fat, 9cal/g
        },
        "note": "T·ª∑ l·ªá 30-40-30 (P-C-F) ph√π h·ª£p gi·∫£m c√¢n"
    }


def get_meal_plan(daily_calories: float, meal_type: str = "balanced") -> Dict:
    """
    G·ª£i √Ω th·ª±c ƒë∆°n theo calories
    
    Args:
        daily_calories: Calories m·ª•c ti√™u m·ªói ng√†y
        meal_type: "balanced", "low_carb", "vegetarian"
    
    Returns:
        Dict v·ªõi meal suggestions
    """
    breakfast_cal = daily_calories * 0.30
    lunch_cal = daily_calories * 0.40
    dinner_cal = daily_calories * 0.25
    
    # G·ª£i √Ω m√≥n ƒÉn ph√π h·ª£p calories
    if meal_type == "balanced":
        return {
            "breakfast": {
                "target_calories": round(breakfast_cal, 0),
                "suggestions": [
                    "Ph·ªü g√† (350 cal) + C√† ph√™ ƒëen (5 cal)",
                    "B√°nh m√¨ pate (280 cal) + S·ªØa chua (100 cal)",
                    "Ch√°o g√† (180 cal) + Tr·ª©ng lu·ªôc (70 cal) + Tr√°i c√¢y (80 cal)"
                ]
            },
            "lunch": {
                "target_calories": round(lunch_cal, 0),
                "suggestions": [
                    "C∆°m g√† (550 cal) + Rau lu·ªôc (50 cal)",
                    "B√∫n th·ªãt n∆∞·ªõng (480 cal) + G·ªèi cu·ªën 2 cu·ªën (140 cal)",
                    "C∆°m + C√° kho (200 cal) + Canh chua (120 cal) + Rau (50 cal)"
                ]
            },
            "dinner": {
                "target_calories": round(dinner_cal, 0),
                "suggestions": [
                    "Ch√°o g√† (180 cal) + Rau lu·ªôc (50 cal)",
                    "B√∫n ri√™u (420 cal)",
                    "C∆°m (200 cal) + ƒê·∫≠u h≈© chi√™n (180 cal) + Canh (120 cal)"
                ]
            },
            "snacks": {
                "suggestions": [
                    "Tr√°i c√¢y (80 cal)",
                    "S·ªØa chua (100 cal)",
                    "G·ªèi cu·ªën 1 cu·ªën (70 cal)"
                ]
            }
        }
    
    elif meal_type == "low_carb":
        return {
            "note": "Gi·∫£m tinh b·ªôt, tƒÉng protein",
            "breakfast": {
                "suggestions": [
                    "Tr·ª©ng chi√™n 2 qu·∫£ (220 cal) + Rau lu·ªôc (50 cal)",
                    "Ch√°o g√† (180 cal)"
                ]
            },
            "lunch": {
                "suggestions": [
                    "Th·ªãt/C√° n∆∞·ªõng (250 cal) + Rau nhi·ªÅu (100 cal) + C∆°m √≠t (100 cal)",
                    "L·∫©u (450 cal) - ƒÉn √≠t b√∫n"
                ]
            },
            "dinner": {
                "suggestions": [
                    "G·ªèi cu·ªën (140 cal) + Canh (120 cal)",
                    "Salad g√† (300 cal)"
                ]
            }
        }
    
    else:  # vegetarian
        return {
            "note": "Chay - t·∫≠p trung ƒë·∫≠u h≈©, n·∫•m, rau",
            "breakfast": {
                "suggestions": [
                    "X√¥i x√©o (320 cal)",
                    "B√°nh cu·ªën chay (200 cal) + N∆∞·ªõc d·ª´a (50 cal)"
                ]
            },
            "lunch": {
                "suggestions": [
                    "C∆°m (200 cal) + ƒê·∫≠u h≈© chi√™n (180 cal) + Rau (100 cal) + Canh (80 cal)",
                    "B√∫n ri√™u chay (380 cal)"
                ]
            },
            "dinner": {
                "suggestions": [
                    "Canh chua chay (100 cal) + Rau lu·ªôc (50 cal) + C∆°m √≠t (150 cal)"
                ]
            }
        }


def get_nutrition_tips() -> List[Dict]:
    """L·ªùi khuy√™n dinh d∆∞·ª°ng cho ng∆∞·ªùi Vi·ªát gi·∫£m c√¢n"""
    return [
        {
            "title": "üçö Gi·∫£m c∆°m, tƒÉng rau",
            "detail": "Thay v√¨ 1 b√°t c∆°m ƒë·∫ßy ‚Üí 2/3 b√°t + rau nhi·ªÅu",
            "benefit": "Gi·∫£m 100-150 cal/b·ªØa"
        },
        {
            "title": "ü•§ B·ªè ƒë·ªì u·ªëng c√≥ ƒë∆∞·ªùng",
            "detail": "Tr√† s·ªØa, n∆∞·ªõc ng·ªçt, c√† ph√™ s·ªØa ‚Üí N∆∞·ªõc l·ªçc, tr√† kh√¥ng ƒë∆∞·ªùng",
            "benefit": "Gi·∫£m 300-500 cal/ng√†y"
        },
        {
            "title": "üçó Ch·ªçn th·ªãt n·∫°c, kh√¥ng da",
            "detail": "G√† b·ªè da, th·ªãt n·∫°c, c√° ‚Üí Tr√°nh m·ª°, da, n·ªôi t·∫°ng",
            "benefit": "Gi·∫£m 200 cal/b·ªØa"
        },
        {
            "title": "üî• H·∫°n ch·∫ø chi√™n r√°n",
            "detail": "H·∫•p, lu·ªôc, n∆∞·ªõng thay v√¨ chi√™n",
            "benefit": "Gi·∫£m 30-50% calories"
        },
        {
            "title": "üïê ƒÇn t·ªëi s·ªõm (tr∆∞·ªõc 7h)",
            "detail": "Tr√°nh ƒÉn khuya ‚Üí Kh√¥ng t√≠ch m·ª°",
            "benefit": "Gi·∫£m c√¢n hi·ªáu qu·∫£ h∆°n 20%"
        },
        {
            "title": "üíß U·ªëng n∆∞·ªõc tr∆∞·ªõc ƒÉn",
            "detail": "U·ªëng 1-2 c·ªëc n∆∞·ªõc 30 ph√∫t tr∆∞·ªõc b·ªØa ƒÉn",
            "benefit": "No nhanh h∆°n, ƒÉn √≠t h∆°n 15-20%"
        },
        {
            "title": "ü•¢ Nhai ch·∫≠m, ƒÉn ch·∫≠m",
            "detail": "M·ªói mi·∫øng nhai 20-30 l·∫ßn, ƒÉn √≠t nh·∫•t 20 ph√∫t/b·ªØa",
            "benefit": "N√£o k·ªãp nh·∫≠n t√≠n hi·ªáu no ‚Üí ƒÇn √≠t h∆°n"
        },
        {
            "title": "üìù Ghi nh·∫≠t k√Ω ƒÉn u·ªëng",
            "detail": "Vi·∫øt ra t·∫•t c·∫£ m√≥n ƒÉn trong ng√†y",
            "benefit": "Nh·∫≠n th·ª©c r√µ ‚Üí Ki·ªÉm so√°t t·ªët h∆°n"
        }
    ]


def find_food_calories(food_name: str) -> Optional[Dict]:
    """
    T√¨m calories c·ªßa m√≥n ƒÉn
    
    Args:
        food_name: T√™n m√≥n ƒÉn
    
    Returns:
        Dict v·ªõi calories v√† macros, ho·∫∑c None
    """
    food_name_lower = food_name.lower()
    
    for category_id, category_data in VIETNAMESE_FOODS.items():
        for food, nutrition in category_data["foods"].items():
            if food.lower() in food_name_lower or food_name_lower in food.lower():
                return {
                    "name": food,
                    "category": category_data["name"],
                    **nutrition
                }
    
    return None


def calculate_meal_calories(foods: List[str]) -> Dict:
    """
    T√≠nh t·ªïng calories c·ªßa m·ªôt b·ªØa ƒÉn
    
    Args:
        foods: Danh s√°ch c√°c m√≥n ƒÉn
    
    Returns:
        Dict v·ªõi total calories v√† breakdown
    """
    total_cal = 0
    total_protein = 0
    total_carbs = 0
    total_fat = 0
    found_foods = []
    not_found = []
    
    for food in foods:
        result = find_food_calories(food)
        if result:
            total_cal += result["calories"]
            total_protein += result["protein"]
            total_carbs += result["carbs"]
            total_fat += result["fat"]
            found_foods.append(result)
        else:
            not_found.append(food)
    
    return {
        "total_calories": total_cal,
        "macros": {
            "protein": round(total_protein, 1),
            "carbs": round(total_carbs, 1),
            "fat": round(total_fat, 1)
        },
        "foods": found_foods,
        "not_found": not_found,
        "count": len(found_foods)
    }

