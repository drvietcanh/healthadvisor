#!/usr/bin/env python3
"""
Script ki·ªÉm tra ƒë·ªô d√†i c√°c file Python
C·∫£nh b√°o n·∫øu c√≥ file >300 d√≤ng
"""

import os
from pathlib import Path

def count_lines(file_path):
    """ƒê·∫øm s·ªë d√≤ng trong file"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            return len(f.readlines())
    except:
        return 0

def check_large_files(root_dir="diseases", max_lines=300):
    """Ki·ªÉm tra c√°c file l·ªõn"""
    large_files = []
    
    for root, dirs, files in os.walk(root_dir):
        for file in files:
            if file.endswith('.py') and file != '__init__.py':
                file_path = os.path.join(root, file)
                lines = count_lines(file_path)
                
                if lines > max_lines:
                    large_files.append((file_path, lines))
    
    # S·∫Øp x·∫øp theo s·ªë d√≤ng gi·∫£m d·∫ßn
    large_files.sort(key=lambda x: x[1], reverse=True)
    
    if large_files:
        print(f"\n‚ö†Ô∏è  C·∫¢NH B√ÅO: Ph√°t hi·ªán {len(large_files)} file v∆∞·ª£t qu√° {max_lines} d√≤ng!\n")
        print("File c·∫ßn chia nh·ªè:")
        print("-" * 70)
        
        for i, (file_path, lines) in enumerate(large_files, 1):
            status = "‚ùå R·∫§T D√ÄI" if lines > 500 else "‚ö†Ô∏è  D√†i"
            print(f"{i}. {status}: {file_path}")
            print(f"   ‚Üí {lines} d√≤ng (v∆∞·ª£t {lines - max_lines} d√≤ng)")
        
        print("-" * 70)
        print(f"\nüí° G·ª£i √Ω: Chia m·ªói file th√†nh c√°c module nh·ªè h∆°n (<{max_lines} d√≤ng/file)")
        return False
    else:
        print(f"\n‚úÖ T·∫•t c·∫£ file Python ƒë·ªÅu <={max_lines} d√≤ng!")
        return True

if __name__ == "__main__":
    check_large_files()

