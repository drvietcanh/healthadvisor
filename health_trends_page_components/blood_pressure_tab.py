"""
Blood Pressure Tab for Health Trends Page
Ph√¢n t√≠ch xu h∆∞·ªõng huy·∫øt √°p
"""

import streamlit as st
from datetime import datetime, timedelta
from health_trends import create_trend_chart


def render_blood_pressure_tab(bp_analysis, df, analysis_days):
    """Render tab huy·∫øt √°p v·ªõi bi·ªÉu ƒë·ªì"""
    
    if bp_analysis:
        # Th√¥ng tin t·ªïng quan
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.metric(
                "Huy·∫øt √°p trung b√¨nh",
                f"{bp_analysis['avg_systolic']}/{bp_analysis['avg_diastolic']}",
                delta=f"{bp_analysis['systolic_trend']['change_percent']}%"
            )
        
        with col2:
            st.metric(
                "Ph√¢n lo·∫°i",
                bp_analysis['category']
            )
        
        with col3:
            trend_emoji = {"increasing": "üìà", "decreasing": "üìâ", "stable": "‚û°Ô∏è"}
            st.metric(
                "Xu h∆∞·ªõng 7 ng√†y",
                trend_emoji.get(bp_analysis['systolic_trend']['trend'], "‚û°Ô∏è") + 
                " " + bp_analysis['systolic_trend']['trend'].capitalize()
            )
        
        # Bi·ªÉu ƒë·ªì xu h∆∞·ªõng huy·∫øt √°p t√¢m thu
        df_filtered = df[df['Ng√†y'] >= (datetime.now() - timedelta(days=analysis_days))]
        df_filtered = df_filtered.sort_values('Ng√†y')
        
        if len(df_filtered) > 0:
            fig_bp = create_trend_chart(
                df_filtered[df_filtered['Huy·∫øt √°p t√¢m thu'].notna()],
                'Huy·∫øt √°p t√¢m thu',
                'Xu h∆∞·ªõng Huy·∫øt √°p T√¢m thu',
                'mmHg',
                reference_lines={
                    'B√¨nh th∆∞·ªùng': (120, 'normal'),
                    'Cao': (140, 'danger')
                }
            )
            st.plotly_chart(fig_bp, use_container_width=True)
            
            # Bi·ªÉu ƒë·ªì t√¢m tr∆∞∆°ng
            fig_bp_dia = create_trend_chart(
                df_filtered[df_filtered['Huy·∫øt √°p t√¢m tr∆∞∆°ng'].notna()],
                'Huy·∫øt √°p t√¢m tr∆∞∆°ng',
                'Xu h∆∞·ªõng Huy·∫øt √°p T√¢m tr∆∞∆°ng',
                'mmHg',
                reference_lines={
                    'B√¨nh th∆∞·ªùng': (80, 'normal'),
                    'Cao': (90, 'danger')
                }
            )
            st.plotly_chart(fig_bp_dia, use_container_width=True)
    else:
        st.info("üìù Ch∆∞a c√≥ ƒë·ªß d·ªØ li·ªáu huy·∫øt √°p ƒë·ªÉ ph√¢n t√≠ch")

